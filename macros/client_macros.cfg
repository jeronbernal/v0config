# These macros are recommended by LDO
# You can copy these entries into your printer.cfg.
# 
# Alternatively, 
# You can copy these entries into your printer.cfg.
# 

[gcode_macro PRINT_START]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
  
    SET_FAN_SPEED FAN=nevermore SPEED=0.8
    LOGO_PENDING

 
    LEDMIN
    NOZZLE_LED_ON
    SET_FAN_SPEED FAN=nevermore SPEED=0.8
    G90 #set absolute positioning
    M107 #turn off parts fan
    M140 S{bedtemp} #set & go bed tmep
    G28
    M109 S{hotendtemp}
    M190 S{bedtemp}
    VORON_PURGE
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

  
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-25 F3600                 ; retract filament
    G91                            ; relative positioning
    
    LEDOFF
    NOZZLE_LED_OFF
    LOGO_READY
    # Cleanup the chamber air for another 10 minutes (if enabled)
    UPDATE_DELAYED_GCODE ID=NEVERMORE_OFF DURATION=600
  

 

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X115 Y115 F3600
  # G0 X60 Y{max_y} F3600          ; park nozzle at rear ## STOCK Config
   
[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z5 F900
    G1 Y3 X3 F27000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E25 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

####### PAUSE RESUME CANCEL FILAMENT  ###################

# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                  ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                             ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}   ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                 ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                         ; save current print position for resume                
        BASE_PAUSE                                                                          ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}      ; check that zhop doesn't exceed z max
            G91                                                                             ; relative positioning
            G1 Z{z} F900                                                                    ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                 ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                 ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500 ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                     ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                             ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                      ; set timeout to 12 hours
    {% endif %}

# Return Z hop back down, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                                                              ; enable filament sensor
        #RESETRGB                                                                                                         ; reset LCD color
        #SET_LOGO_LEDS_BY_NAME COLOR="WHITE"                                                                              ; set logo LEDs back to white
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                      ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                                                            ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                                                         ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                                                              ; relative positioning
        M83                                                                                                              ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                             
            G1 Z{zhop * -1} E{e} F900                                                                                    ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                                                         ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=100                                                             ; restore position
        BASE_RESUME                                                                                                      ; resume print
    {% endif %}

# Filament runout / change alias    
[gcode_macro M600]
gcode:
    # LCDRGB R=0 G=1 B=0                  # Turn LCD green
    # SET_LOGO_LEDS_BY_NAME COLOR="GREEN" # Turn logo green
    PAUSE
    
# Disable filament sensor 1 sec after startup, only enable during prints (in PRINT_START/PRINT_END, and in PAUSE/RESUME)
[delayed_gcode DISABLEFILAMENTSENSOR]   
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}


# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#     SAVE_GCODE_STATE NAME=UNLOADFILAMENT
#     M83                                   ; set extruder to relative
#     G1 E10 F600                           ; extrude a little to soften tip 
#     G1 E-50 F1800                        ; retract filament completely
#     RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

# [gcode_macro LOAD_FILAMENT]
# gcode:
#     SAVE_GCODE_STATE NAME=LOADFILAMENT
#     M83 ; set extruder to relative
#     G1 E50 F600
#     RESTORE_GCODE_STATE NAME=LOADFILAMENT

# [gcode_macro UNLOAD_FILAMENT]
# description: Unloads filament from toolhead
# gcode:
#   {% set EXTRUDER_TEMP = params.TEMP|default(260)|int %}
#   CHOME
#   G91                         ; relative positioning
#   G1 Z20                      ; move nozzle upwards
#   FRONT                       ; move the toolhead to the front
#   LOGO_PENDING
#   M109 S{EXTRUDER_TEMP}       ; heat up the hotend
#   LOGO_READY
#   M83                         ; set extruder to relative mode
#   G1 E-8 F1800                ; quickly retract a small amount to elimate stringing
#   G4 P200                     ; pause for a short amount of time
#   G1 E-50 F300                ; retract slowly the rest of the way
#   G1 E-20 F300
#   M400                        ; wait for moves to finish
#   M117 Unload Complete!
#   LOGO_OFF

# [gcode_macro LOAD_FILAMENT]
# description: Loads new filament into toolhead
# gcode:
#   {% set EXTRUDER_TEMP = params.TEMP|default(260)|int %}
#   CHOME
#   G91                         ; relative positioning
#   G1 Z20                      ; move nozzle upwards
#   FRONT                       ; move the toolhead to the front
#   LOGO_PENDING
#   M109 S{EXTRUDER_TEMP}       ; heat up the hotend
#   LOGO_READY
#   M83                         ; set extruder to relative mode
#   G1 E50 F300                 ; extrude slowlyL
#   G1 E50 F300
#   M400                        ; wait for moves to finish
#   M117 Load Complete!
#   LOGO_OFF

[gcode_macro CENTER]
description: Moves the toolhead to the center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y{x_center} F7800

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y10 F7800

[gcode_macro NOZZLE_PURGE]
description: Draw a purge line at the front left edge of the build plate
gcode:
  CHOME
  G0 X2.5 Y4 F3000 ; Go to front
  G0 Z0.15 ; Drop to bed
  M83 ; Set extruder to relative mode
  G1 X45 E15 F500 ; Extrude 25mm of filament in a 4cm line
  G1 E-0.5 F400 ; Retract a little
  G1 X85 F4000 ; Quickly wipe away from the filament line
  G1 Z0.3 ; Raise and begin printing.

[gcode_macro LIGHT_ON]
variable_delay_ms: 50
variable_led_count: 8
gcode:
  {% for led_index in range(1, led_count + 1) %}
    # SET_LED LED=rgb1 RED=0.8 GREEN=0.8 BLUE=0.99 INDEX={led_index}
    SET_LED LED=Skirt_LEDs RED=0.8 GREEN=0.8 BLUE=0.8 WHITE=1 
    SET_LED LED=bed_light RED=0.8 GREEN=0.8 BLUE=0.8 WHITE=1 
    G4 P{delay_ms}
  {% endfor %}
  

[gcode_macro LIGHT_OFF]
gcode:
  # SET_LED LED=rgb1 RED=0 GREEN=0 BLUE=0
  SET_LED LED=Skirt_LEDs RED=0 GREEN=0 BLUE=0 WHITE=0 
  SET_LED LED=bed_light RED=0 GREEN=0 BLUE=0 WHITE=0 

[gcode_macro LOGO_PENDING]
gcode:
  SET_LED LED=bed_light RED=0.99 GREEN=0.1 BLUE=0.1 WHITE=0

[gcode_macro LOGO_READY]
gcode:
  SET_LED LED=bed_light RED=0.1 GREEN=0.2 BLUE=0.99 WHITE=0

[gcode_macro LOGO_OFF]
gcode:
  SET_LED LED=bed_light RED=0 GREEN=0 BLUE=0 WHITE=0


[gcode_macro FAN_ON]
gcode:
  SET_FAN_SPEED FAN=hotend_fan SPEED=0.5
  SET_FAN_SPEED FAN=fan SPEED=0.5


[gcode_macro LEDOFF]
gcode:  SET_PIN PIN=caselight VALUE=0

[gcode_macro LEDMIN]
gcode:  SET_PIN PIN=caselight VALUE=.3

[gcode_macro LEDMAX]
gcode:  SET_PIN PIN=caselight VALUE=1

[gcode_macro NOZZLE_LED_ON]
gcode:  SET_PIN PIN=sequin VALUE=1.0

[gcode_macro NOZZLE_LED_OFF]
gcode:  SET_PIN PIN=sequin VALUE=0

[delayed_gcode turn_on_lights]
gcode:
  NOZZLE_LED_ON
initial_duration: 0.1


[delayed_gcode NEVERMORE_OFF]
gcode:
   SET_FAN_SPEED FAN=nevermore SPEED=0

#############################################################

#############################################################
#### Off Everything 
#############################################################

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=nevermore SPEED=0    ; turn exhaust fan off
    # SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_FAN_SPEED FAN=BedInner SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0        ; turn light off
    SET_PIN PIN=sequin VALUE=0           ; turn nozzle leds off




